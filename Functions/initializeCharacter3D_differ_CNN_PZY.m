function net = initializeCharacter3D_differ_CNN_PZY()

f=1/1000 ;
net.layers = {} ;
f1=9;
f2=1;
f3=5;
channel1=1;
channel2=64;
channel3=32;
n1=64;
n2=32;
n3=1;
%f*randn(f1,f1,channel1,n1, 'single')
net.layers{end+1} = struct('type', 'conv', ...
                           'filters', f*randn(f1,f1,channel1,n1, 'single'), ...
                           'biases', zeros(1, n1, 'single'), ...
                           'stride', 1, ...
                           'pad', 0, ...
                           'filtersLearningRate',0.00025, ...
                           'biasesLearningRate',0.00025) ;
net.layers{end+1} = struct('type', 'relu') ;
% net.layers{end+1} = struct('type', 'pool', ...
%                            'method', 'max', ...
%                            'pool', [2 2], ...
%                            'stride', 2, ...
%                            'pad', 0) ;
net.layers{end+1} = struct('type', 'conv', ...
                           'filters', f*randn(f2,f2,channel2,n2, 'single'),...
                           'biases', zeros(1,n2,'single'), ...
                           'stride', 1, ...
                           'pad', 0, ...
                           'filtersLearningRate',0.00025, ...
                           'biasesLearningRate',0.00025) ;
net.layers{end+1} = struct('type', 'relu') ;
% net.layers{end+1} = struct('type', 'pool', ...
%                            'method', 'max', ...
%                            'pool', [2 2], ...
%                            'stride', 2, ...
%                            'pad', 0) ;
net.layers{end+1} = struct('type', 'conv', ...
                           'filters', f*randn(f3,f3,channel3,n3, 'single'),...
                           'biases', zeros(1,n3,'single'), ...
                           'stride', 1, ...
                           'pad', 0, ...
                           'filtersLearningRate',0.000025, ...
                           'biasesLearningRate',0.000025) ;
% net.layers{end+1} = struct('type', 'relu') ;
% net.layers{end+1} = struct('type', 'conv', ...
%                            'filters', f*randn(2,2,500,26, 'single'),...
%                            'biases', zeros(1,26,'single'), ...
%                            'stride', 1, ...
%                            'pad', 0) ;
net.layers{end+1} = struct('type', 'SAD_loss') ;
